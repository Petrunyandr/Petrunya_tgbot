import logging
import os
import random
import telebot as t
from dotenv import load_dotenv
from telebot import types


load_dotenv()
logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("bot.log", encoding="utf-8"),
        logging.StreamHandler(),
    ],
)

BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = t.TeleBot(BOT_TOKEN)

bot.set_my_commands(
    [
        types.BotCommand("start", "–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É üòÅ"),
        types.BotCommand("music", "–ø–æ—Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É üéµ"),
    ]
)


@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(
        message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /music, —á—Ç–æ–±—ã –ø–æ—Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É üéß"
    )


track1 = {
    "file_id": "CQACAgIAAxkBAAE5Vd1omdUEdweQlxY-fQkrrkNmjqV7hgACUW0AAklmAAFL-wKswKyHlAY2BA",
    "title": "Zwei elefanten",
    "performer": "–ù–∞—Ç–∞–ª–∏—è –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞",
    "duration": 97,
}
track2 = {
    "file_id": "CQACAgIAAyEFAASV6D8-AAIF-WiaPbD10kdILCq1F8QlxKT-EHMwAAI4hwAC17LQSClF2JMqiy5bNgQ",
    "title": "–°–ö–û–†–ê–ô–®–ï–ì–û –í–´–ó–î–û–†–û–í–õ–ï–ù–ò–Ø",
    "performer": "–ì–ê–ü–û–†–î",
    "duration": 182,
}

track3 = {
    "file_id": "CQACAgIAAxkBAAE5XANomjbLqBFMyrD2rl51Aw1ToPe4EwACVm8AApsyeUgiDrL8jRWk1TYE",
    "title": "Stayin' alive",
    "performer": "Bee Gees",
    "duration": 287,
}


@bot.message_handler(content_types=["audio", "voice"])
def get_file_id(message):
    audio = message.audio or message.voice
    if audio:
        logging.info(f"–ü–æ–ª—É—á–µ–Ω file_id: {audio.file_id} –æ—Ç {message.from_user.id}")
        bot.send_message(message.chat.id, f"file_id –¥–ª—è —ç—Ç–æ–≥–æ –∞—É–¥–∏–æ:\n{audio.file_id}")


@bot.message_handler(commands=["music"])
def send_random_music(message):
    logging.info(f"/music –æ—Ç {message.from_user.id} @{message.from_user.username}")
    chosen_track = random.choice([track1, track2, track3])
    try:
        bot.send_audio(
            chat_id=message.chat.id,
            audio=chosen_track["file_id"],
            title=chosen_track["title"],
            performer=chosen_track["performer"],
            duration=chosen_track["duration"],
            caption="–ª—É—Ç–∞–π",
        )
        logging.info(
            f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –º—É–∑—ã–∫–∞ '{chosen_track['title']}' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}"
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º—É–∑—ã–∫–∏: {e}")


@bot.message_handler(func=lambda message: message.text.lower() == "–∫—É")
def ku(message):
    bot.send_message(message.chat.id, "–Ω–µ—Ç")

@bot.message_handler(
    func=lambda message: message.text.lower() in ("—Å–ø—Å", "—Å–ø–∞—Å–∏–±–æ", "–æ —Å–ø—Å")
)
def sps(message):
    bot.send_message(message.chat.id, "–Ω–µ–∑")


@bot.message_handler(func=lambda message: message.text.lower() == "–ø—Ä")
def pr(message):
    bot.send_message(message.chat.id, "–ø—Ä")


@bot.message_handler(func=lambda message: message.text.lower() == "–µ–±–∞–ª–æ")
def ebalo(message):
    bot.send_message(message.chat.id, "—Å–∞–º")


@bot.message_handler(
    func=lambda message: message.text.lower()
    in ("–∏–¥–∏ –Ω–∞—Ö—É–π", "–∏–¥–∏ –Ω–∞—Ö—É—Ü", "–∏–¥–∏ –Ω–∞–∑—É–π", "–∏–¥–∏ –≤ –ø–∏–∑–¥—É", "–∏–¥–∏ –≤ –ø–∏–∑–¥—Ü")
)
def mneme(message):
    bot.send_message(message.chat.id, "–Ω–µ –±—É–¥—Éü§£ü§£ü§£")


@bot.message_handler(func=lambda message: message.text.lower() == "—Å–æ—Ä–∏")
def jdnd(message):
    bot.send_message(message.chat.id, "–ø—Ä–æ—â–æ–Ω")


@bot.message_handler(func=lambda message: message.text.lower() == "–∞–ª–µ")
def ale(message):
    bot.send_message(message.chat.id, "—Ç—É–¥–∞")


if __name__ == "__main__":
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω (polling)")
    
    bot.infinity_polling(skip_pending=True)
