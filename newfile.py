print("üëÄ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")

import os
from dotenv import load_dotenv
import telebot as t
from telebot import types
from flask import Flask, request

print("‚úÖ –ò–º–ø–æ—Ä—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω")

load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
APP_URL = os.getenv("APP_URL")  # –Ω–∞–ø—Ä–∏–º–µ—Ä, https://mybot.onrender.com

if not BOT_TOKEN:
    raise Exception("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")

if not APP_URL:
    raise Exception("‚ùå APP_URL –Ω–µ –Ω–∞–π–¥–µ–Ω (—É–∫–∞–∂–∏ URL Render —Å–µ—Ä–≤–∏—Å–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)")

bot = t.TeleBot(BOT_TOKEN)
server = Flask(__name__)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
bot.set_my_commands([
    types.BotCommand("start", "–Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É üòÅ"),
    types.BotCommand("music", "–ø–æ—Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É üéµ")
])

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ /music, —á—Ç–æ–±—ã –ø–æ—Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É üéß")

# –ö–æ–º–∞–Ω–¥–∞ /music
@bot.message_handler(commands=['music'])
def music(message):
    audio_url = "https://github.com/Petrunyandr/Petrunya_tgbot/raw/main/zweielephanten.mp3"
    bot.send_audio(message.chat.id, audio=audio_url, caption="–í–æ—Ç —Ç–≤–æ—è –º—É–∑—ã–∫–∞ üé∂")

@bot.message_handler(func=lambda message: message.text.lower() == "–∫—É")
def ku(message):
    bot.send_message(message.chat.id, "–Ω–µ—Ç")

# Flask route –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
@server.route("/", methods=['GET'])
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç üëå"

# Flask route –¥–ª—è Telegram webhook
@server.route(f"/{BOT_TOKEN}", methods=['POST'])
def webhook():
    json_str = request.get_data().decode("UTF-8")
    update = t.types.Update.de_json(json_str)
    bot.process_new_updates([update])
    return "!", 200

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
def set_webhook():
    bot.remove_webhook()
    bot.set_webhook(url=f"{APP_URL}/{BOT_TOKEN}")

if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"{APP_URL}/{BOT_TOKEN}")
    server.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
